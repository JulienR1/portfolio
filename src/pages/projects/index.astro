---
import Header from "../../components/Header.astro";
import Layout from "../../layouts/Layout.astro";
import ProjectCard from "../../components/ProjectCard.astro";
import Footer from "../../components/Footer.astro";
import { translate, type Language } from "../../i18n";
import { parseProjects } from "../../parsers";

import projects from "../../resources/projects.json";

const projectIds = Object.keys(projects) as (keyof typeof projects)[];
const t = translate(
    {
        en: {
            page: "Projects",
            title: "More projects",
            projects: parseProjects("en", projects),
        },
        fr: {
            page: "Projets",
            title: "Plus de projets",
            projects: parseProjects("fr", projects),
        },
    },
    Astro.currentLocale,
);
---

<Layout title={t("page")}>
    <main>
        <Header title={t("title")} navigation />

        <ul>
            {
                projectIds.map((projectId) => (
                    <ProjectCard
                        id={projectId}
                        title={t(`projects.${projectId}.title`)}
                        subtitle={t(`projects.${projectId}.subtitle`)}
                        tags={projects[projectId].tags}
                        img={projects[projectId].img}
                        showcases={projects[projectId].showcases.map(
                            (showcase) => ({
                                ...showcase,
                                cta: showcase.cta[
                                    Astro.currentLocale! as Language
                                ],
                            }),
                        )}
                    >
                        {/* No XSS risks since everything is built locally once with local data. */}
                        <Fragment
                            set:html={t(`projects.${projectId}.description`)}
                        />
                    </ProjectCard>
                ))
            }
        </ul>
    </main>

    <Footer center />
</Layout>

<style lang="scss">
    main {
        margin: 0 auto;
        min-height: calc(100vh - 8em);
    }

    ul {
        padding: 0;
    }

    @media (min-width: 50rem) {
        main {
            max-width: 40rem;
        }
    }

    @media (min-width: 65rem) {
        main {
            max-width: 85rem;
            padding: 1em 5em;
        }

        ul {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 0 2.5em;
        }
    }
</style>
