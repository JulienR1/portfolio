---
import { translate, type Language } from "../i18n";
import Layout from "../components/Layout.astro";
import Aside from "../components/Aside.astro";
import ExperienceCard from "../components/ExperienceCard.astro";
import experience from "../resources/experience.json";

const companies = [
    "agilean",
    "pinax",
    "flo",
    "cleio",
    "agc",
] satisfies (keyof typeof experience)[];

function parseExperience<L extends Language>(language: L) {
    const result = {} as Record<
        (typeof companies)[number],
        (typeof experience)[(typeof companies)[number]][L]
    >;
    for (const company of companies) {
        result[company] = experience[company][language];
    }
    return result;
}

const keys = {
    en: {
        sections: {
            about: "About",
            experience: "Experience",
            projects: "Projects",
        },
        experience: parseExperience("en"),
    },
    fr: {
        sections: {
            about: "À propos",
            experience: "Expérience",
            projects: "Projets",
        },
        experience: parseExperience("fr"),
    },
};

const t = translate(keys, Astro.currentLocale);
---

<Layout>
    <Aside />

    <main>
        <section id="about">
            <h2>{t("sections.about")}</h2>
        </section>

        <section id="experience">
            <h2>{t("sections.experience")}</h2>

            <ul>
                {
                    companies.map((company) => (
                        <ExperienceCard
                            start={t(`experience.${company}.start`)}
                            end={t(`experience.${company}.end`)}
                            title={t(`experience.${company}.title`)}
                            company={t(`experience.${company}.company`)}
                            url={t(`experience.${company}.url`)}
                            subtitle={t(`experience.${company}.subtitle`)}
                            tags={experience[company].tags}
                        >
                            {/* No XSS risks since everything is built locally once with local data. */}
                            <Fragment
                                set:html={t(
                                    `experience.${company}.description`,
                                )}
                            />
                        </ExperienceCard>
                    ))
                }
            </ul>
        </section>

        <section id="projects">
            <h2>{t("sections.projects")}</h2>
        </section>
    </main>
</Layout>

<style lang="scss">
    section {
        h2 {
            text-transform: uppercase;
            font-size: 1.2em;
            font-weight: 700;
            padding: 1em 0;
        }

        ul {
            margin: 0;
            padding: 0;
            list-style-type: none;
        }
    }

    @media (min-width: 50rem) {
        body {
            display: grid;
            grid-template-columns: 22.5rem minmax(auto, 37.5rem);
            justify-content: space-around;
            max-width: 100rem;
            margin: 0 auto;
            gap: 2rem;
        }

        main {
            padding: 3em 0;
        }
    }

    @media (min-width: 56rem) {
        body {
            gap: 5rem;
        }
    }
</style>
